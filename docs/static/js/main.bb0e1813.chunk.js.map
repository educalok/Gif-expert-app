{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","categs","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,0BAAMC,SAVa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAS,IACtBP,GAAc,SAAAQ,GAAM,OAAKN,GAAL,mBAAoBM,OACxCL,EAAc,OAOd,2BAAOM,KAAK,OAAOC,MAAOR,EAAYS,SAfhB,SAACN,GACzBF,EAAcE,EAAEO,OAAOF,YCLdG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACvC,OACE,yBAAKC,UAAU,qBACb,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCNGK,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UAAUF,GAD3C,+DAEFG,MAAMR,GAFJ,cAEfS,EAFe,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATjB,kBAYdY,GAZc,4CAAH,sDCKPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdpB,mBAAS,CACjC0B,KAAM,GACNO,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBxC,OAXAC,qBAAU,WACRjB,EAAQC,GAAUiB,MAAK,SAACC,GACtBC,YAAW,WACTJ,EAAS,CACPT,KAAMY,EACNL,SAAS,MAEV,UAEJ,CAACb,IAEGc,EDd0BM,CAAapB,GAAjCU,EAD0B,EAC/BJ,KAAaO,EADkB,EAClBA,QAErB,OACE,oCACE,wBAAIjB,UAAU,kBAAkBI,GAC/Ba,GAAW,uBAAGjB,UAAU,kBAAb,iBAEV,yBAAKA,UAAU,aACZc,EAAOF,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaY,IAAKZ,EAAIhB,IAAQgB,UEW3Ba,EAvBM,WAAM,MAEW1C,mBAAS,CAAC,cAFrB,mBAElB2C,EAFkB,KAEN5C,EAFM,KASzB,OACE,oCACE,4CACA,6BACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,4BACG4C,EAAWf,KAAI,SAACR,GACf,OAAO,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,U,MCdnDwB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.bb0e1813.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.length > 2) {\r\n      setCategories(categs => [inputValue, ...categs]);\r\n      setInputValue(\"\");\r\n    }\r\n    //console.log(\"submit\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"animate__bounceIn\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n","export const getGifs = async ( category ) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=zR6V2G91uiaJuckqD9T2WvB1TGeZs95M`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","//import React, { useState, useEffect } from \"react\";\r\nimport React from \"react\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__swing\">{category}</h3>\r\n      {loading && <p className=\"animate__flash\">\"Cargando...\"</p>}\r\n      {\r\n        <div className=\"card-grid\">\r\n          {images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </div>\r\n      }\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setTimeout(() => {\r\n        setState({\r\n          data: imgs,\r\n          loading: false,\r\n        });\r\n      }, 200);\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./components/AddCategory\";\r\nimport { GifGrid } from \"./components/GifGrid\";\r\nconst GifExpertApp = () => {\r\n  //const categories = [\"One Punch\", \"Samurai X\", \"Dragon Ball\"];\r\n  const [categories, setCategories] = useState([\"One Punch\"]);\r\n\r\n  /*  const handleAdd = () => {\r\n    //setCategories([...categories, \"Death Note\"]);\r\n    setCategories(categs => [...categs, \"Death Note\"]);\r\n  }; */\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <hr />\r\n      <AddCategory setCategories={setCategories} />  \r\n      <ol>\r\n        {categories.map((category) => {\r\n          return <GifGrid key={category} category={category} />;\r\n        })}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GifExpertApp from \"./GifExpertApp\";\nimport './index.css'\n\nReactDOM.render(<GifExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}